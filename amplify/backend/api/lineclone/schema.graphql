type User
  @model
  @auth(
    rules: [
      { allow: private, operations: [read] }
      { allow: owner, ownerField: "id", operations: [update] }
    ]
  ) {
  id: ID! @auth(rules: [{ allow: private, operations: [read] }])
  name: String!
  statusMessage: String!
  image: String
  coverImage: String

  friends: [UserFriend] @hasMany(fields: ["id"])
  friendOf: [UserFriend] @hasMany(fields: ["id"])

  chats: [Chat] @hasMany(fields: ["id"])
  chatWith: [Chat] @hasMany(fields: ["id"])
}

type UserFriend 
  @model 
  @auth(
    rules: [
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!

  userID: ID!
  user: User @belongsTo(fields: ["userID"])

  friendID: ID!
  friend: User @belongsTo(fields: ["friendID"])

  status: String!
  favorite: Boolean @auth(rules: [
    { allow: owner, ownerField: "userID", operations: [update] }
  ])
}

type Chat
  @model
  @auth(
    rules: [
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!

  userID: ID!
  user: User @belongsTo(fields: ["userID"])

  friendID: ID!
  friend: User @belongsTo(fields: ["friendID"])

  message: [Message] @hasMany(indexName: "byChat", fields: ["id"])
    @auth(rules: [
      { allow: owner, ownerField: "userID", operations: [read] }
      { allow: owner, ownerField: "friendID", operations: [read] }
    ])
}

type Message
  @model
  @auth(
    rules: [
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  content: String!
  chatID: ID! @index(name: "byChat")
  chat: Chat @belongsTo(fields: ["chatID"])
  }